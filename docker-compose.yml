services:
  db:
    image: docker.io/postgis/postgis
    container_name: db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - ${DB_PORT}:5432

  server:
    init: true
    build:
      context: .
    container_name: ogcapi
    environment:
      RUST_LOG: ${RUST_LOG}
      APP_HOST: ${APP_HOST}
      APP_PORT: ${APP_PORT}
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_CUSTOM_ENDPOINT: http://minio:9000
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
    volumes:
      - ./ogcapi/src:/app/ogcapi/src:ro
      - ./ogcapi/Cargo.toml:/app/ogcapi/Cargo.toml:ro
      - ./ogcapi-client/src:/app/ogcapi-client/src:ro
      - ./ogcapi-client/Cargo.toml:/app/ogcapi-client/Cargo.toml:ro
      - ./ogcapi-drivers/src:/app/ogcapi-drivers/src:ro
      - ./ogcapi-drivers/Cargo.toml:/app/ogcapi-drivers/Cargo.toml:ro
      - ./ogcapi-drivers/migrations:/app/ogcapi-drivers/migrations:ro
      - ./ogcapi-services/src:/app/ogcapi-services/src:ro
      - ./ogcapi-services/Cargo.toml:/app/ogcapi-services/Cargo.toml:ro
      - ./ogcapi-types:/app/ogcapi-types:ro
    depends_on:
      db:
        condition: service_healthy
    command: tail -f /dev/null
    ports:
      - ${APP_PORT}:${APP_PORT}

  minio:
    image: docker.io/minio/minio
    container_name: minio
    volumes:
      - ./data/minio:/data
    command: server /data --console-address ":9001"
    ports:
      - 9000:9000
      - 9001:9001

  minio-mc:
    image: docker.io/minio/mc
    container_name: minio-mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
        /usr/bin/mc mb myminio/${AWS_S3_BUCKET_NAME};
        /usr/bin/mc anonymous set public myminio/${AWS_S3_BUCKET_NAME};
        /usr/bin/mc admin user add myminio ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
        /usr/bin/mc admin policy attach myminio readwrite --user ${AWS_ACCESS_KEY_ID};
        exit 0;
      "
